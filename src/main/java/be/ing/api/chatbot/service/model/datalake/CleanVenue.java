/**
 * datalake-cache.appspot.com
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package be.ing.api.chatbot.service.model.datalake;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;


/**
 * CleanVenue
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-24T11:09:35.462+02:00")
public class CleanVenue   {
  @SerializedName("address")
  private CleanClubAddress address = null;

  @SerializedName("blockNumber")
  private Integer blockNumber = null;

  @SerializedName("contactDetails")
  private List<CleanClubContactDetail> contactDetails = new ArrayList<CleanClubContactDetail>();

  @SerializedName("id")
  private String id = null;

  @SerializedName("links")
  private List<Link> links = new ArrayList<Link>();

  @SerializedName("mainVenue")
  private Boolean mainVenue = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("pitches")
  private List<CleanPitch> pitches = new ArrayList<CleanPitch>();

  public CleanVenue address(CleanClubAddress address) {
    this.address = address;
    return this;
  }

   /**
   * Get address
   * @return address
  **/
  @ApiModelProperty(example = "null", value = "")
  public CleanClubAddress getAddress() {
    return address;
  }

  public void setAddress(CleanClubAddress address) {
    this.address = address;
  }

  public CleanVenue blockNumber(Integer blockNumber) {
    this.blockNumber = blockNumber;
    return this;
  }

   /**
   * Get blockNumber
   * @return blockNumber
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getBlockNumber() {
    return blockNumber;
  }

  public void setBlockNumber(Integer blockNumber) {
    this.blockNumber = blockNumber;
  }

  public CleanVenue contactDetails(List<CleanClubContactDetail> contactDetails) {
    this.contactDetails = contactDetails;
    return this;
  }

  public CleanVenue addContactDetailsItem(CleanClubContactDetail contactDetailsItem) {
    this.contactDetails.add(contactDetailsItem);
    return this;
  }

   /**
   * Get contactDetails
   * @return contactDetails
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<CleanClubContactDetail> getContactDetails() {
    return contactDetails;
  }

  public void setContactDetails(List<CleanClubContactDetail> contactDetails) {
    this.contactDetails = contactDetails;
  }

  public CleanVenue id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public CleanVenue links(List<Link> links) {
    this.links = links;
    return this;
  }

  public CleanVenue addLinksItem(Link linksItem) {
    this.links.add(linksItem);
    return this;
  }

   /**
   * Get links
   * @return links
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<Link> getLinks() {
    return links;
  }

  public void setLinks(List<Link> links) {
    this.links = links;
  }

  public CleanVenue mainVenue(Boolean mainVenue) {
    this.mainVenue = mainVenue;
    return this;
  }

   /**
   * Get mainVenue
   * @return mainVenue
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getMainVenue() {
    return mainVenue;
  }

  public void setMainVenue(Boolean mainVenue) {
    this.mainVenue = mainVenue;
  }

  public CleanVenue name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public CleanVenue pitches(List<CleanPitch> pitches) {
    this.pitches = pitches;
    return this;
  }

  public CleanVenue addPitchesItem(CleanPitch pitchesItem) {
    this.pitches.add(pitchesItem);
    return this;
  }

   /**
   * Get pitches
   * @return pitches
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<CleanPitch> getPitches() {
    return pitches;
  }

  public void setPitches(List<CleanPitch> pitches) {
    this.pitches = pitches;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CleanVenue cleanVenue = (CleanVenue) o;
    return Objects.equals(this.address, cleanVenue.address) &&
        Objects.equals(this.blockNumber, cleanVenue.blockNumber) &&
        Objects.equals(this.contactDetails, cleanVenue.contactDetails) &&
        Objects.equals(this.id, cleanVenue.id) &&
        Objects.equals(this.links, cleanVenue.links) &&
        Objects.equals(this.mainVenue, cleanVenue.mainVenue) &&
        Objects.equals(this.name, cleanVenue.name) &&
        Objects.equals(this.pitches, cleanVenue.pitches);
  }

  @Override
  public int hashCode() {
    return Objects.hash(address, blockNumber, contactDetails, id, links, mainVenue, name, pitches);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CleanVenue {\n");
    
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    blockNumber: ").append(toIndentedString(blockNumber)).append("\n");
    sb.append("    contactDetails: ").append(toIndentedString(contactDetails)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("    mainVenue: ").append(toIndentedString(mainVenue)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    pitches: ").append(toIndentedString(pitches)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

