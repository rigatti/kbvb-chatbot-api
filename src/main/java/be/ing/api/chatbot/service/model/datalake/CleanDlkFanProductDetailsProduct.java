/**
 * datalake-cache.appspot.com
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package be.ing.api.chatbot.service.model.datalake;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;


/**
 * CleanDlkFanProductDetailsProduct
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-24T11:09:35.462+02:00")
public class CleanDlkFanProductDetailsProduct   {
  @SerializedName("links")
  private List<Link> links = new ArrayList<Link>();

  @SerializedName("maxAuthorization")
  private Long maxAuthorization = null;

  @SerializedName("maxOrder")
  private Long maxOrder = null;

  @SerializedName("productId")
  private String productId = null;

  @SerializedName("status")
  private String status = null;

  @SerializedName("subProductId")
  private String subProductId = null;

  @SerializedName("subProductType")
  private String subProductType = null;

  public CleanDlkFanProductDetailsProduct links(List<Link> links) {
    this.links = links;
    return this;
  }

  public CleanDlkFanProductDetailsProduct addLinksItem(Link linksItem) {
    this.links.add(linksItem);
    return this;
  }

   /**
   * Get links
   * @return links
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<Link> getLinks() {
    return links;
  }

  public void setLinks(List<Link> links) {
    this.links = links;
  }

  public CleanDlkFanProductDetailsProduct maxAuthorization(Long maxAuthorization) {
    this.maxAuthorization = maxAuthorization;
    return this;
  }

   /**
   * Get maxAuthorization
   * @return maxAuthorization
  **/
  @ApiModelProperty(example = "null", value = "")
  public Long getMaxAuthorization() {
    return maxAuthorization;
  }

  public void setMaxAuthorization(Long maxAuthorization) {
    this.maxAuthorization = maxAuthorization;
  }

  public CleanDlkFanProductDetailsProduct maxOrder(Long maxOrder) {
    this.maxOrder = maxOrder;
    return this;
  }

   /**
   * Get maxOrder
   * @return maxOrder
  **/
  @ApiModelProperty(example = "null", value = "")
  public Long getMaxOrder() {
    return maxOrder;
  }

  public void setMaxOrder(Long maxOrder) {
    this.maxOrder = maxOrder;
  }

  public CleanDlkFanProductDetailsProduct productId(String productId) {
    this.productId = productId;
    return this;
  }

   /**
   * Get productId
   * @return productId
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getProductId() {
    return productId;
  }

  public void setProductId(String productId) {
    this.productId = productId;
  }

  public CleanDlkFanProductDetailsProduct status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public CleanDlkFanProductDetailsProduct subProductId(String subProductId) {
    this.subProductId = subProductId;
    return this;
  }

   /**
   * Get subProductId
   * @return subProductId
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getSubProductId() {
    return subProductId;
  }

  public void setSubProductId(String subProductId) {
    this.subProductId = subProductId;
  }

  public CleanDlkFanProductDetailsProduct subProductType(String subProductType) {
    this.subProductType = subProductType;
    return this;
  }

   /**
   * Get subProductType
   * @return subProductType
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getSubProductType() {
    return subProductType;
  }

  public void setSubProductType(String subProductType) {
    this.subProductType = subProductType;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CleanDlkFanProductDetailsProduct cleanDlkFanProductDetailsProduct = (CleanDlkFanProductDetailsProduct) o;
    return Objects.equals(this.links, cleanDlkFanProductDetailsProduct.links) &&
        Objects.equals(this.maxAuthorization, cleanDlkFanProductDetailsProduct.maxAuthorization) &&
        Objects.equals(this.maxOrder, cleanDlkFanProductDetailsProduct.maxOrder) &&
        Objects.equals(this.productId, cleanDlkFanProductDetailsProduct.productId) &&
        Objects.equals(this.status, cleanDlkFanProductDetailsProduct.status) &&
        Objects.equals(this.subProductId, cleanDlkFanProductDetailsProduct.subProductId) &&
        Objects.equals(this.subProductType, cleanDlkFanProductDetailsProduct.subProductType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(links, maxAuthorization, maxOrder, productId, status, subProductId, subProductType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CleanDlkFanProductDetailsProduct {\n");
    
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("    maxAuthorization: ").append(toIndentedString(maxAuthorization)).append("\n");
    sb.append("    maxOrder: ").append(toIndentedString(maxOrder)).append("\n");
    sb.append("    productId: ").append(toIndentedString(productId)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    subProductId: ").append(toIndentedString(subProductId)).append("\n");
    sb.append("    subProductType: ").append(toIndentedString(subProductType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

